设计文档模板
  1. Overview（概述）
说明本设计方案的需求来源，需求分析，功能概要描述。参照已有商业开发的特性，原则上必须有特性调研文档。

需要来源要说明特性支持的部署形态为 主备(单机)、分布式、集群，部分特性视情况下需要细分。

2. Features（功能特性）
必选：说明本方案的功能特性。有等价类的正交划分形式，给出功能特性设计出来的规格全貌。

(1) 功能按等价类划分子特性，将每个子特性对应的输出行为，尝试进行行为解释说明。等价类划分要证明全面。

子特性1	用例输出行为	行为解释说明
(2) 函数或者表达式特性设计，必须给出不同参数组合情况下，功能特性的表现情况。同时因为与数据类型相关，要组合不同数据类型入参下，计划和执行阶段出参的类型。

参数形式	参数形式	用例输出行为	行为解释说明
(3) SQL语法有关的功能特性设计，需要给出语法图或EBNF，说明各语法分支的具体含义。不支持的分支可以不提及，但只做了语法兼容的分支，要给出显著而且明确的说明。

语法分支1	用例输出行为	行为解释说明
3. Interfaces（接口）
列出本方案对外提供的接口、配置参数、API等。

1.函数或者表达式特性，要从测试用户或者DBA角度，给出对外接口。

2.SQL语法，必须给出EBNF。禁止描述不存在的分支。

3.协议、驱动等接口类，必须罗列完全用户可感知的接口函数说明。

4.与数据库的功能相关的系统表、系统视图和配置参数，需要罗列，给出设计说明。

4. Specification And Constraints（规格与约束）
说明本方案对外的功能规格或约束。

从设计、架构、功能内部耦合角度产生的约束，必须给出详细说明，用于支撑测试方案的灰盒测试。

结合《特性调研文档》，给出我们与竞品的差异点、优缺点描述。

5. Detail Design（详细设计）
方案设计的详细说明，包括但不限于方案选型、方案所依赖的技术/第三方组件的原理或背景介绍、关键技术点、方案折衷的考量、可靠性分析、兼容性分析。可以根据需要增删小节。

必选项1：关键技术点说明，设计方案要契合代码原有架构，涉及架构整改的工作，必须详细方案展开，同时评估好对其他特性的影响。

必选项2：第三方组件，组件的开源协议，引入后可能带来的影响。不允许未经过DRB评审的第三方组件合入。

必选项3：SR的特性设计需要跨模块配合，要拆解出来AR列表。

5.1 Architecture（架构）
说明方案的总体架构，优先考虑通过架构图进行描述。给出业务架构和对应的技术架构，可参考资料：https://zhuanlan.zhihu.com/p/269201440

5.2 Data Structures & Flow（数据结构与流程）
设计主要数据结构、工作流程、时序图等。

与协议、通讯、多线程多进程同步、涉及多个模块互相配合的功能特性设计，必须需要给出时序图（为了跨模块分解AR和定义模块间接口，可参考 https://www.jianshu.com/p/282d57f09692 ）。

给出功能特性的工作流程图（体现功能特性内部工作流程，可参考 https://zhuanlan.zhihu.com/p/112731728 ）。用于支撑测试方案的灰盒测试。

5.3 Compatibility（兼容性）
说明设计方案对兼容性的影响，如果影响了兼容性，则需要给出详细的兼容性方案设计。

在涉及对已交付版本的系统表、系统视图、系统包等特性做修改时，要参照版本兼容性要求文档，给出兼容性设计。

5.4 DFX设计
按特性的种类可选，涉及安全、性能、可靠、可维、可测；

1.协议、驱动、访问控制、通讯、加密等特性需求，要考虑安全；

2.执行表达式和算子类的特性需求，需要考虑性能；

3.主备、容灾、存储等的特性需求，需要考虑可靠性；

4.所有特性均需要考虑可维、可测。

5.5 其他
根据特性开发的种类，有不同的涉及相关项, 如下示例，不同的特性种类关心范围有所差异，需要根据特性种类来扩展：

涉及数据库语法开发，需要考虑系统权限和系统审计。

涉及数据库对象的特性开发，需要考虑对象级权限、对象级审计、对象安全访问和主备同步实现。

6. Testcases（自测用例）
设计开发人员自测用例（文字描述），给出开发者自测试的设计方案表格或者XMIND、开发自测的用例归档路径。

自测关注点：

覆盖全面
避免重复测试
测试用例的可维护性
自测用例设计方法：

边界值
等价类
正交
7.资料设计章节
资料在设计阶段，要识别出来相关需要调整的范围、大纲。

8. TODO（遗留问题）
说明本方案遗留的问题或下一步需要解决的问题。
